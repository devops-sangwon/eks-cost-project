name: ON EKS All Chart
permissions:
  id-token: write
  contents: write
  pull-requests: write
on:
  push:
    branches: [temp]
  # schedule:
  # - cron: "0 0 * * *"

jobs:
  eks-on:
    strategy:
      max-parallel: 1
      matrix:
        environment: ["dev", "qa", "staging"]
        namespace: ["sock-shop", "example", "msa"]
    environment: ${{ matrix.environment }}
    runs-on: ubuntu-22.04
    steps:
      - name: Clone Module Repository
        uses: actions/checkout@v3
        with:
          repository: devops-sangwon/gh-module
          ref: ${{ secrets.module_version }}
          path: ./action_modules
      - uses: actions/checkout@v3
      - name: Get AWS Credentials 
        uses: ./action_modules/common/aws/credential
        with:
          AWS_ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE }}
      - name: setup kubectl & helm
        uses: ./action_modules/common/deploy/helm
        with:
          EKS_CLUSTER: ${{ secrets.EKS_CLUSTER }}
      - name: Helm Rollback history
        run: |
          REVISION=`helm history ${{ matrix.namespace }} -n ${{ matrix.namespace }} | xargs`
          REVISION=$((REVISION))
          LAST_REVISION=$(($REVISION -1))
          helm rollback ${{ matrix.namespace }} $LAST_REVISION -n ${{ matrix.namespace }}
      - name: Success eks-on
        if: success()
        uses: ./action_modules/common/slack/success/eks-cost-project/schedule
        with:
          MESSAGE: 'ON EKS CLUSTER'
          TYPE: 'on'
          EKS_CLUSTER: '${{ secrets.EKS_CLUSTER }}'
          SLACK_WEBHOOK: ${{ secrets.SCHEDULE_SLACK_WEBHOOK }}
      - name: Failure eks-on
        if: failure()
        uses: ./action_modules/common/slack/failure/eks-cost-project/schedule
        with:
          MESSAGE: 'ON EKS CLUSTER'
          TYPE: 'on'
          EKS_CLUSTER: '${{ secrets.EKS_CLUSTER }}'
          SLACK_WEBHOOK: ${{ secrets.SCHEDULE_SLACK_WEBHOOK }}

